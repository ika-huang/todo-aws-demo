type Todo {
  id: ID!
  userId: String!
  title: String!
  description: String
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
}

type Item {
  id: ID!
  name: String!
  description: String
  value: Int
  createdAt: Float!
  updatedAt: Float
}

input CreateItemInput {
  name: String!
  description: String!
  value: Int!
}

input UpdateItemInput {
  id: ID!
  name: String
  description: String
  value: Int
}

input CreateTodoInput {
  title: String!
  description: String
}

input UpdateTodoInput {
  id: ID!
  title: String
  description: String
}

type Query {
  getTodo(id: ID!): Todo
  listTodos: [Todo!]!
  listItems: [Item!]!
}

type Mutation {
  createTodo(createTodoInput: CreateTodoInput!, userId: String): Todo
  updateTodo(updateTodoInput: UpdateTodoInput!): Boolean
  deleteTodo(id: ID!): Boolean
  createItem(createItemInput: CreateItemInput): Item!
  updateItem(updateItemInput: UpdateItemInput): Item!
  deleteItem(id: ID!): Item
}
